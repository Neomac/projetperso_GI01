{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10040\viewh8620\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qj

\f0\b\fs24 \cf0 Algorithmes Individu.h:
\b0 \
\
\

\b Random1
\b0 \
\
R\'e9sultat: Donne al\'e9atoirement 0 ou 1 selon une probabilit\'e9 choisie\
Index: prob (entier compris entre 0 et 100 correspondant \'e0 la probabilit\'e9 d'obtenir 1)\
	rand (fonction donnant al\'e9atoirement un chiffre entre 0 et 32768)\
\
\ul Si\ulnone  (rand%100+1) <= prob \ul Alors\ulnone \
	retourner 1\
\ul Sinon\ulnone \
	retourner 0\
\ul Fin Si\ulnone \
\
\

\b CroiseI:
\b0  ListeBit A1 * ListeBit A2 * Entier pcroise -> rien\
\
R\'e9sultat: Intervertie aleatoirement les valeurs de deux listes de bits 'a1' et 'a2' selon une probabilite choisie (entre 0 et 100)\
Index: A1 et A2 (listes de bits \'e0 croiser), pcroise (entier compris entre 0 et 100 correspondant \'e0 la probabilit\'e9 de croiser les bits), tampon (entier tampon pour intervertir les valeurs)\
\
\ul Si\ulnone  Vide(A1) \ul Alors\ulnone \
	rien\
\ul Sinon\ulnone \
	\ul Si\ulnone  Random1(pcroise) = 1 \ul Alors\ulnone \
		tampon <- Valeur_Tete(A1)\
		A1 -> valeur <- Valeur_Tete(A2)\
		A2 -> valeur <- tampon\
	\ul Fin Si\ulnone \
	CroiseI( Reste(A1), Reste(A2), pcroise )\
\ul Fin Si\ulnone \
\
\

\b InitialiserIndivIteratif:
\b0 \
\
R\'e9sultat: Cree et remplie une liste de bits A aleatoirement de 0 ou de 1\
Index: A (liste de bits \'e0 cr\'e9er), taille (entier donnant le nombre de bits de la liste), prob (entier compris entre 0 et 100 correspondant \'e0 la probabilit\'e9 d'obtenir 1), i (entier servant de compteur)\
\
A <- Creer()\
\ul Pour\ulnone  i=0 \ul Jusqu'\'e0\ulnone  i <= taille \ul Faire\ulnone \
	Ajouter_Queue_Indiv ( A, Random1(prob) )\
	i <- i+1\
\ul Fait\ulnone \
Retourner A\
\
\

\b ConversionBinNum:
\b0  ListeBit A * Entier i -> R\'e9el\
\
Algorithme r\'e9cursif\
R\'e9sultat: convertie les bits d'une liste en de bit en son entier correspondant dans la base decimale\
Index: A (liste de bits \'e0 convertir),  i (entier servant de compteur au sous-programme)\
\
\ul Si\ulnone  Vide(A) \ul Alors\ulnone \
	Retourner 0\
\ul Sinon\ulnone \
	Retourner ( Valeur_Tete(A) * 2\'88i + ConversionBinNum(Reste(A), i+1))\
\ul Fin Si\ulnone \
\
\ul \

\b \ulnone QualiteI:
\b0 \
\
R\'e9sultat: calcul la qualit\'e9 d'une liste de bits A\
Index: liste (liste de bits dont on va calculer la valeur), LongIndiv (entier donnant la longeur des individus de la liste permettant de choisir quelle formule utiliser)\
\
\ul Si\ulnone  LongIndiv=8 \ul Faire\ulnone \
	Retourner f1(ConversionBinNum(A))\
\ul Sinon Si\ulnone  LongIndiv=16 \ul Faire\ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qj
\cf0 	Retourner f2(ConversionBinNum(A))\
\ul Sinon S\ulnone i LongIndiv=32 \ul Faire\ulnone \
	Retourner f3(ConversionBinNum(A))\
\ul Fin Si\ulnone \
\
}
{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14520\viewh11820\viewkind0
\pard\tx720\tx1440\tx1640\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 \ul \ulc0 Work Log & To Do List:
\b0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\

\b 10/12/12:
\b0 \
\
Travail Effectu\'e9:\
D\'e9fini les types individu et population\
Initialisation indiv -> Algo it\'e9ratif\
\
Travail \'e0 faire pour Arnaud:\
random1(pourcentage voulu)\
Croise les listes selon proba\
qualite\
\
Travail \'e0 faire pour Antoine:\
convertir indiv en entier\
algo recursif initialiser indiv\
\

\b 11/12/12:
\b0 \
\
Travail effectu\'e9:\
Avancement des fonctions random1 et conversion indiv en entier\
\
Travail \'e0 faire:\
idem\
\

\b 13/12/12:
\b0 \
\
Travail effectu\'e9:\
Sous-programmes random1\
\
Travail \'e0 faire pour Arnaud:\
Croise les listes selon proba\
qualite\
\
Travail \'e0 faire pour Antoine:\
convertir indiv en entier (\'e0 finir)\
algo recursif initialiser indiv\
\

\b 18/12/12:
\b0 \
\
Travail effectu\'e9:\
makefile\
convertir indiv en entier\
Fonction de croisement\
Initialiser individu\
Fonction qualit\'e9\
Type abstrait population\
\
Travail \'e0 faire pour Arnaud:\
Initialiser indiv iteratif\
Fonction croise population\
\
Travail \'e0 faire pour Antoine:\
quicksort\
\
\

\b 26/12/12:\
\

\b0 Travail effectu\'e9:\
Initialiser indiv iteratif\
Initialiser population iteratif et recursif\
Operateurs population\
Rationalisation des noms d'op\'e9rateurs entre listerait et population\
Rationalisation de la r\'e9partition des programmes dans les diff\'e9rents fichiers\
\
Travail \'e0 faire:\
Le coeur du programme! On y est enfin! Le reste n'\'e9tait que pr\'e9paration pour ce moment!\
- croiser pop\
- trier pop (quicksort)\
- s\'e9lectionner pop (n\'e9cessite une liste tri\'e9e donc que quicksort soit fait)\
Afficher indiv de meilleur qualit\'e9\
Commentariser tout \'e7a\
Faire un makefile (un vrai, pas la bidouille que j'ai fait)\
R\'e9diger le rapport, accessoirement\
\

\b 02/01/2013:\

\b0 Travail effectu\'e9:\
D\'e9but du boulot sur le QuickSort, mais c'est pas encore termin\'e9. Doit retravailler l'algo.\
\
Id\'e9e de truc a mettre dans le rapport:\
Comparaison sur les 2 versions du m\'eame algo, version it\'e9rative et r\'e9cursive, avec une id\'e9e du temps que nous on pris a faire ces deux algo (c'est a dire 2 sec), la place du code et sa clart\'e9, et le temps d'ex\'e9cution machine (avec de grosse g\'e9n\'e9ration).\
Description des diff\'e9rents altos les plus \'e9labor\'e9 qu'on a fait (\'e7a va pas \'eatre \'e9norme :S)\
Id\'e9e d'am\'e9lioration : pas trop de truc a dire de ce cot\'e9 la, va falloir chercher\
}